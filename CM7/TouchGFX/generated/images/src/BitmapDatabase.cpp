// 4.25.0 0xae0105a0
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_alternate_theme_images_backgrounds_800x480_gradient_dark[]; // BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_800X480_GRADIENT_DARK_ID = 0, Size: 800x480 pixels
extern const unsigned char image_alternate_theme_images_backgrounds_800x480_puzzle[]; // BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_800X480_PUZZLE_ID = 1, Size: 800x480 pixels
extern const unsigned char image_alternate_theme_images_containers_large_narrow_light[]; // BITMAP_ALTERNATE_THEME_IMAGES_CONTAINERS_LARGE_NARROW_LIGHT_ID = 2, Size: 312x270 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_alternate_theme_images_backgrounds_800x480_gradient_dark, 0, 800, 480, 0, 0, 800, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 480, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 },
    { image_alternate_theme_images_backgrounds_800x480_puzzle, 0, 800, 480, 0, 0, 800, ((uint8_t)touchgfx::Bitmap::RGB888) >> 3, 480, ((uint8_t)touchgfx::Bitmap::RGB888) & 0x7 },
    { image_alternate_theme_images_containers_large_narrow_light, 0, 312, 270, 4, 2, 304, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 266, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
